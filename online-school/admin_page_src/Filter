import React, { useEffect } from 'react';
import { FormControl, InputLabel, Select, MenuItem, Button } from '@material-ui/core';
import { makeStyles } from '@material-ui/core/styles';

import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import lang from '/somewhere';
import { ProgramNames, Klasses } from './const';
import * as actions from './actions';

const useClasses = makeStyles(() => ({
  root: {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginTop: 20,
  },
  select: {
    width: '33%',
    margin: 10,
  },
}));

const Filter = ({ userId, subjects, filter, setFilter, klasses, loadProgramAsync }) => {
  const classes = useClasses();

  useEffect(() => {
    setFilter({ subject: Object.keys(ProgramNames)[0] });
  }, []);

  const onChangeSubject = (event) => {
    setFilter({ subject: event.target.value });
  };

  const getProgramsByFilter = () => {
    loadProgramAsync(userId);
  };

  return (
    <div className={classes.root}>
      <FormControl className={classes.select} fullWidth>
        <InputLabel id="demo-simple-select-label">
          {lang(['adminka_individual_program', 'filter', 'chooseSubject'])}
        </InputLabel>
        <Select
          labelId="demo-simple-select-label"
          id="demo-simple-select"
          value={filter.subject}
          label="Subject"
          onChange={onChangeSubject}
        >
          {subjects.map((subj) => (
            <MenuItem key={subj.id} value={subj}>
              {ProgramNames[subj]}
            </MenuItem>
          ))}
        </Select>
      </FormControl>
      <Button
        variant="outlined"
        color="primary"
        size="small"
        onClick={getProgramsByFilter}
        disabled={!subjects.length}
      >
        {lang(['adminka_individual_program', 'filter', 'findProgram'])}
      </Button>
    </div>
  );
};

const mapStateToProps = (state) => state;
const mapDispatchToProps = (dispatch) => bindActionCreators(actions, dispatch);
export default connect(mapStateToProps, mapDispatchToProps)(Filter);
